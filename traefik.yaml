---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: traefik-external
    cert-manager.io/cluster-issuer: letsencrypt-production
spec:
  entryPoints: [websecure]
  routes:
    - kind: Rule
      match: Host(`traefik.chonk.city`)
      services:
        - name: api@internal
          kind: TraefikService
          strategy: RoundRobin
          weight: 10
          port: 80
      middlewares:
        - name: rate-limit
          namespace: traefik
        - name: https-redirectscheme
          namespace: traefik
        - name: default-headers
          namespace: traefik
        - name: compress
          namespace: traefik
  tls:
    secretName: chonk-city-tls
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: zigbee2mqtt-ingress
  namespace: frontend
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints: [websecure]
  routes:
    - kind: Rule
      match: Host(`zigbee.chonk.city`)
      services:
        - name: zigbee2mqtt
          port: 8080
          strategy: RoundRobin
          weight: 10
  tls:
    secretName: chonk-city-tls
# TRAEFIK:
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: frigate-ingress
  namespace: frontend
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints: [web, websecure]
  routes:
    - kind: Rule
      match: Host(`frigate.chonk.city`)
      services:
        - name: frigate
          port: 5000
          strategy: RoundRobin
          weight: 10
  tls:
    secretName: chonk-city-tls
---
apiVersion: traefik.io/v1alpha1
kind: ingressRouteTCP
metadata:
  name: frigate-ingress-tcp
  namespace: frontend
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entrypoints: [frigatetcp, webrtctcp]
  routes:
    - match: HostSNI(`*`)
      priority: 10
      services:
        - name: frigate
          port: 8554
          weight: 10
          terminationDelay: 400
          proxyProtocol:
            version: 2
            nativeLB: true
        - match: HostSNI(`*`)
          priority: 10
          services:
            - name: frigate
              port: 8555
              weight: 10
              terminationDelay: 500
              proxyProtocol:
                version: 2
                nativeLB: true
  tls:
    secretName: chonk-city-tls
---
# END OF TRAEFIK
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: longhorn-ui-ingress
  namespace: longhorn-system
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`longhorn.chonk.city`)
      kind: Rule
      services:
        - name: longhorn-frontend
          port: 80
          strategy: RoundRobin
          weight: 10
  tls:  #
    secretName: chonk-city-tls  #
